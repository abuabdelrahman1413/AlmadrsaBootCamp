:root {
  --container-width: 130rem;
  --gutter: 2rem;

  --color-black: #000;
  --color-white: #fff;
  --color-blue: #2374e1;
  --color-light-blue: #1d9bf0;
  --color-dark-blue: #0a66c2;
  --color-darker-blue: #143ce8;
  --color-red: #ff0000;
  --color-green: #03a696;
  --color-grey: #f6f6f6;
  --color-dark-green: #42959b;
  --color-background: var(--color-white);
  --color-text: var(--color-black);
  --color-box-img: var(--color-black);
  --color-link-bg: var(--color-green);
  --color-input-border: var(--color-black);
  --font-family-raleway: "Raleway", sans-serif;
  --font-family-poppins: "Poppins", sans-serif;
  --font-weight-regular: 400;
  --font-weight-medium: 500;
  --font-weight-semi-bold: 600;
  --font-weight-bold: 700;
  --font-size-70: 7rem;
  --font-size-65: 6.5rem;
  --font-size-40: 4rem;
  --font-size-38: 3.8rem;
  --font-size-24: 2.4rem;
  --font-size-22: 2.2rem;
  --font-size-20: 2rem;
  --font-size-18: 1.8rem;
  --font-size-15: 1.5rem;
  --transition-timing: 0.3s;
}

/*Start CSS Reset TODO:Read about css reset*/

* {
  margin: 0;
  padding: 0;
  font: inherit;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

a {
  color: inherit;
  display: inline-block;
}

button {
  background-color: transparent;
  border: none;
  cursor: pointer;
  border: 0;
}

ul,
ol {
  list-style: none;
}

html {
  /* Scroll-behavior, smooth, provides a smooth scrolling effect */
  /* Scroll-padding-top, 11rem, provides space at the top of the page when scrolling */
  font-size: 10px;
  scroll-behavior: smooth;
  scroll-padding-top: 11rem;
}

body,
[type="submit"] {
  font-size: 1.6rem;
  font-family: var(--font-family-raleway);
  background-color: var(--color-background);
  color: var(--color-text);
  border: 0;
}
/*End style reset*/

/*Center the container*/
.container {
  display: grid;
  row-gap: 11rem;
  margin: 0 auto;
  max-width: calc(var(--container-width) + var(--gutter) * 2);
  padding-inline: var(--gutter);
}

.video__loop {
  position: fixed; /*بتشبه absolute  لكن دي ما بتحترم الأب */
  top: 0;
  left: 0;
  min-width: 100%;
  min-height: 100%;
  opacity: 0.08;
  z-index: -1;
}
/*End container*/

/*Glopal styles*/

.h2__heading {
  font-size: var(--font-size-65);
  font-weight: var(--font-weight-bold);
  grid-column: 1/-1;
  margin-bottom: 8.7rem;
  text-transform: uppercase;
}

.h3__heading {
  font-size: var(--font-size-38);
  font-weight: var(--font-weight-bold);
  margin-bottom: 2.5rem;
  text-transform: uppercase;
}

.section {
  display: grid;
  grid-template-columns: repeat(2, auto);
  align-items: start;
  position: relative;
}

.section-wt-bg {
  padding: 11rem 0;
}

.section-wt-bg::before {
  content: "";
  position: absolute;
  height: 100%;
  width: 100vw;
  background-color: var(--color-background);
  justify-self: center;
  z-index: -1;
}

/*End global styles*/

.header {
  padding: 3rem 0;
  position: sticky;
  top: 0;
  background-color: var(--color-background);
  justify-content: center;
  display: flex;
  z-index: 1;
  /*padding: 3rem 0; This is the padding at the top and bottom of the header*/
  /*position: sticky; This makes the header stick to the top of the screen while scrolling*/
  /*top: 0; This is the distance of the header from the top of the screen*/
  /*background-color: var(--color-background); This is the background color of the header*/
  /*justify-content: center; This centers the content of the header*/
  /*display: flex; This displays the header as a flex box*/
  /*z-index: 1; This is the stack order of the header*/
}

.header::before {
  content: "";
  position: absolute;
  height: 100%;
  width: 100vw;
  top: 0.1rem;
  border-bottom: 0.1rem solid var(--color-input-border);
  z-index: -1;
  background-color: var(--color-background);
}

.navigation_list {
  display: flex; /* ✅ */
  gap: 2rem; /* ✅ */
}

.navigation_link:link,
.navigation_link:visited {
  text-decoration: none;
  font-weight: var(--font-weight-bold);
}

.navigation_link:hover,
.navigation_link:active {
  text-decoration: underline;
  color: var(--color-light-blue);
}

.container:has(#bio:target) .navigation__bio {
  color: var(--color-link-bg);
  text-decoration: underline;
  font-weight: var(--font-weight-bold);
}

.container:has(#skills:target) .navigation__skills {
  color: var(--color-link-bg);

  text-decoration: underline;
  font-weight: var(--font-weight-bold);
}

.container:has(#media:target) .navigation__media {
  color: var(--color-link-bg);

  text-decoration: underline;
  font-weight: var(--font-weight-bold);
}

.container:has(#projects:target) .navigation__projects {
  color: var(--color-link-bg);

  text-decoration: underline;
  font-weight: var(--font-weight-bold);
}

.container:has(#clients:target) .navigation__clients {
  color: var(--color-link-bg);

  text-decoration: underline;
  font-weight: var(--font-weight-bold);
}

/**Units
*-percentafe
*-font % = percent of font-size of parent
*-length% = percent of width of parent

font-based : em - font parent 3 * 24
em - length: font of current element 2 * 24
rm: root based 10 * 16 
vh 90v 90% of height of browser
vw 80v of height of browser
*/

/*Toggle*/
.toggle {
  display: flex;
  gap: 1rem;
  margin-left: auto;
}

.toggle_checkbox {
  display: none;
}

.toggle_title {
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-18);
}

.toggle_label {
  display: block;
  position: relative;
  background-color: var(--color-black);
  border-radius: 1.5rem;
  width: 4.5rem;
  height: 2.2rem;
  cursor: pointer;
  padding: 0.3rem 0.4rem;
  transition: 0.3s;
}

.toggle_label::after {
  content: "";
  width: 1.6rem;
  height: 1.6rem;
  border-radius: 50%;
  display: block;
  background-color: var(--color-white);
  transition: 0.3s;
}

/* This CSS rule targets the `.toggle_label` element that is placed immediately
   after the `.toggle_checkbox` element that is checked. The `+` selector in CSS
   is the adjacent sibling combinator, which selects the element that comes immediately
   after the first specified element (in this case, the `.toggle_checkbox` element).
   The `:checked` pseudo-class targets the `.toggle_checkbox` element when it is
   in the checked state, and the `background-color` property sets the background
   color of the `.toggle_label` element to white. */

.toggle_checkbox:checked + .toggle_label::after {
  transform: translateX(2.1rem);
  background-color: var(--color-green);
}
/*Toggle End*/

/*Bio*/
.bio {
  column-gap: 7.4rem;
  grid-template-columns: repeat(2, 1fr);
}

.bio__heading {
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-70);
}

.bio__objective {
  font-family: var(--font-family-poppins);
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-20);
  margin: 3rem 0 8rem;
}

.bio__name {
  font-weight: var(--font-weight-semi-bold);
}

.bio__almdrasa {
  color: var(--color-green);
}

.bio__links {
  font-size: 2.4rem;
  font-weight: var(--font-weight-semi-bold);
  text-decoration: none;
}

.say-hi-link {
  background-color: var(--color-link-bg);
  padding: 0.7rem 4.7rem;
  color: var(--color-white);
}

.find-out-link {
  padding: 0.7rem 0;
  margin-inline-start: 1.4rem;
}

@keyframes jump {
  0% {
    transform: translateY(0.5rem);
  }
  35% {
    transform: translateY(-0.5rem);
  }

  70% {
    transform: translateY(0);
  }

  100% {
    transform: translateY(0);
  }
}

.bio__arrow {
  display: inline-block;
  animation: jump 1s infinite alternate ease-in-out;
  font-weight: 900;
  font-size: var(--font-size-35);
}

.bio__pic-content {
  display: flex;
  position: relative;
  align-items: flex-end;
  justify-self: end;
  border-radius: 50%;
}

.bio__pic-content::before {
  content: "";
  position: absolute;
  background-color: var(--color-box-img);
  width: 100%;
  height: 46rem;
  z-index: -1;
  border-radius: 1.8rem;
  box-shadow: 2.17543px 8.7017px 38.0699px rgba(0, 0, 0, 0.15);
}

.bio__pic {
  width: 42.7rem;
}

/*Bio End*/

/*Skills*/

.skills__list {
  display: grid;
  row-gap: 2rem;
  grid-template-columns: repeat(3, 1fr);
  margin-top: 4rem;
}

.skills_title {
  font-size: var(--font-size-38);
  font-weight: var(--font-weight-semi-bold);
}

.experince {
  font-size: var(--font-size-20);
  display: inline-block;
  margin-top: 1rem;
}

/*End Skills*/

/*Media*/
.media {
  display: flex;
  align-items: center;
  justify-content: center;
}
.media__video {
  width: 100%; /*you need this with video and images if not the width be out of the page*/
}
/*End media*/

/*Projects*/
.projects__main {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: 7.4rem;
  row-gap: 7.5rem;
}

.projects__img {
  box-shadow: 1rem 0 1rem rgba(0, 0, 0, 0.2);
  max-width: 100%;
}

.projects__data {
  align-self: center;
}

.projects__description {
  line-height: 1.5;
}

.projects__link {
  font-weight: var(--font-weight-medium);
  font-family: var(--font-family-poppins);
  color: var(--color-dark-blue);
  margin-top: 2.3rem;
}

.projects__link::after {
  content: "";
  display: inline-block;
  width: 1.7rem;
  height: 1.7rem;
  background-image: url(images/external-icon.png);
  background-size: contain;
  margin-left: 1rem;
}

/*End projects*/

/*Clients*/
.clinents__opinions {
  grid-column: 1/-1;
  font-size: var(--font-size-40);
  line-height: 1.7;
}

.clients__wrapper {
  display: flex;
  overflow-x: auto;
  /*scroll-snap-type: x mandatory; mean that we can scroll on x axis*/
  scroll-snap-type: x mandatory; /*بيعمل سكرول بشكل الزامي بشكل أفقي الخيارات الأخرى none proximety*/

  gap: 2.3rem;
}

.clients__opinion {
  flex-basis: 100%;
  flex-shrink: 0;
  scroll-snap-align: start;
}

/*End clients*/

/*Contact*/
.contact__section {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: 20rem;
  align-items: center;
}

.contact__description {
  font-size: var(--font-size-24);
  line-height: 1.7;
  font-weight: var(--font-weight-medium);
}

.contact__email {
  font-weight: var(--font-weight-bold);
  font-size: x-large;
  margin: 2.5rem 0;
}

.contact__social {
  /*transition is used to change the properties smoothly like color,width,height,margin,padding,opacity
  transform is used to change the position or shape of the element like scale, rotate, translate,skew*/

  /*transition: property duration timing-function delay iteration-count direction fill-mode;
  property: which property we want to change
  duration: how long the transition will take
  timing-function: how smooth the transition will be
  delay: how much time the transition will wait to start
  iteration-count: how many times the transition will repeat
  direction: the direction of the transition
  fill-mode: the state of the element before and after the transition*/

  transition: var(--transition-timing);
  cursor: pointer;
}

.contact__social:hover {
  /*When we hover on the social icon, it will scale up by 30%*/
  /*transform: transform-function | transform-function;
  transform-function: scale, rotate, translate,skew, matrix*/

  transform: scale(1.3);
}
html:has(.toggle_checkbox:checked) .contact__social {
  filter: invert(1);
}

.contact__inputs {
  display: flex;
  gap: 3rem;
}

.contact__input {
  border: 0;
  outline: 0;
  border-bottom: 0.1rem solid var(--color-input-border);
  background: transparent;
  font-size: var(--font-size-20);

  /*The flex-grow property specifies the flex grow factor, 
  which determines how much of the remaining space in the flex container should be assigned to the item.
  It accepts any positive number, including 0 if no growth is desired. The default value is 0,
   meaning by default, the item does not grow. */
  flex: 1;
}

.contact__textarea {
  width: 100%;
  margin-top: 4rem;
}

.contact__button {
  background-color: var(--color-link-bg);
  color: var(--color-white);
  padding: 1.7rem 1.8rem;
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-24);
  margin-top: 3.4rem;
}

form:invalid::after {
  content: "Invalid data";
  font-size: var(--font-size-20);
  color: #ff0000;
}
/*End contact*/

/*Footer*/
footer {
  padding: 2rem 0;
  /* text-align: center; */
  border-top: 0.1rem solid var(--color-black);

  font-size: var(--font-size-20);
}
/*End footer*/

/*Theme*/
html:has(.toggle_checkbox:checked) {
  --color-background: var(--color-black);
  --color-text: var(--color-white);
  --color-box-img: var(--color-green);
  --color-link-bg: var(--color-green);
  --color-grey: #08080808;
  --color-input-border: var(--color-white);
}
/*End theme*/
